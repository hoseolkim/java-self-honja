front pattern
command pattern

ISP
한개의 객체에 공통된 기능을 수행하는 인터페이스를 구현하지 말고
두개의 인터페이스를 두개의 객체에 각각 구현해라.

DIP
inversion -> container를 사용해라.
ex) tomcat, mybatis

데이터와 템플릿을 병합해주는 존재..
템플린엔진 -> 템플릿 엔진이 없다면 템플릿은 쓰레기가 된다.

응답컨텐츠의 타입에 따라서

클라이언트 사이드 주석은 사용하지않는것이 좋다
1. 주석이 노출된다는 단점
2. 클라이언트 서버에 과부하를 덜기 위해


action tag -> server코드, 즉 자바코드로 바뀜


form태그의 action이 생략되면,submit했을 때
현재 브라우저가 가진 url로 요청한다(현재주소 : location객체가 가지고있는 href속성의 value


검증은 무조건 서버에서해야한다.